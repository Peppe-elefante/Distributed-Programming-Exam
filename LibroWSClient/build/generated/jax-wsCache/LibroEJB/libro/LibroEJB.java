
package libro;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.5
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LibroEJB", targetNamespace = "http://libro/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LibroEJB {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<libro.LibroEntity>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaNome", targetNamespace = "http://libro/", className = "libro.TrovaNome")
    @ResponseWrapper(localName = "trovaNomeResponse", targetNamespace = "http://libro/", className = "libro.TrovaNomeResponse")
    @Action(input = "http://libro/LibroEJB/trovaNomeRequest", output = "http://libro/LibroEJB/trovaNomeResponse")
    public List<LibroEntity> trovaNome(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns libro.LibroEntity
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaId", targetNamespace = "http://libro/", className = "libro.TrovaId")
    @ResponseWrapper(localName = "trovaIdResponse", targetNamespace = "http://libro/", className = "libro.TrovaIdResponse")
    @Action(input = "http://libro/LibroEJB/trovaIdRequest", output = "http://libro/LibroEJB/trovaIdResponse")
    public LibroEntity trovaId(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "saveLibro", targetNamespace = "http://libro/", className = "libro.SaveLibro")
    @ResponseWrapper(localName = "saveLibroResponse", targetNamespace = "http://libro/", className = "libro.SaveLibroResponse")
    @Action(input = "http://libro/LibroEJB/saveLibroRequest", output = "http://libro/LibroEJB/saveLibroResponse")
    public void saveLibro(
        @WebParam(name = "arg0", targetNamespace = "")
        LibroEntity arg0);

    /**
     * 
     * @return
     *     returns java.util.List<libro.LibroEntity>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaTutti", targetNamespace = "http://libro/", className = "libro.TrovaTutti")
    @ResponseWrapper(localName = "trovaTuttiResponse", targetNamespace = "http://libro/", className = "libro.TrovaTuttiResponse")
    @Action(input = "http://libro/LibroEJB/trovaTuttiRequest", output = "http://libro/LibroEJB/trovaTuttiResponse")
    public List<LibroEntity> trovaTutti();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "updateLibro", targetNamespace = "http://libro/", className = "libro.UpdateLibro")
    @ResponseWrapper(localName = "updateLibroResponse", targetNamespace = "http://libro/", className = "libro.UpdateLibroResponse")
    @Action(input = "http://libro/LibroEJB/updateLibroRequest", output = "http://libro/LibroEJB/updateLibroResponse")
    public void updateLibro(
        @WebParam(name = "arg0", targetNamespace = "")
        LibroEntity arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "libroService", targetNamespace = "http://libro/", className = "libro.LibroService")
    @ResponseWrapper(localName = "libroServiceResponse", targetNamespace = "http://libro/", className = "libro.LibroServiceResponse")
    @Action(input = "http://libro/LibroEJB/libroServiceRequest", output = "http://libro/LibroEJB/libroServiceResponse")
    public List<String> libroService(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "removeLibro", targetNamespace = "http://libro/", className = "libro.RemoveLibro")
    @ResponseWrapper(localName = "removeLibroResponse", targetNamespace = "http://libro/", className = "libro.RemoveLibroResponse")
    @Action(input = "http://libro/LibroEJB/removeLibroRequest", output = "http://libro/LibroEJB/removeLibroResponse")
    public void removeLibro(
        @WebParam(name = "arg0", targetNamespace = "")
        LibroEntity arg0);

}
